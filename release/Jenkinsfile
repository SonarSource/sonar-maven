node('linux') {
  stage('SCM') {
    checkout scm
  }
  stage('Build') {
    withSonarQubeEnv('next') {  // SonarQube taskId is automatically attached to the pipeline context
      withMaven(maven: 'Maven 3.5.2') {
        sh "mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent package sonar:sonar"            
      }
    }
  }
}
  
// No need to occupy a node
stage("Quality Gate"){
  timeout(time: 1, unit: 'HOURS') { // Just in case something goes wrong, pipeline will be killed after a timeout
    def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
    if (qg.status != 'OK') {
      error "Pipeline aborted due to quality gate failure: ${qg.status}"
    }
  }
}
